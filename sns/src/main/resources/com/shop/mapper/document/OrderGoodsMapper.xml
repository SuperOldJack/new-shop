<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.document.OrderGoodsMapper">
  <resultMap id="BaseResultMap" type="com.shop.pojo.document.OrderGoods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="amount_money" jdbcType="DECIMAL" property="amount_money" />
    <result column="actual_money" jdbcType="DECIMAL" property="actual_money" />
    <association column="goods_document_code" property="goodsDocument" resultMap="com.shop.mapper.document.GoodsDocumentMapper.BaseResultMap"></association>
    <association column="card_id" property="card" resultMap="com.shop.mapper.CardMapper.BaseResultMap"></association>
    <association column="client_id" property="client" resultMap="com.shop.mapper.BaseMapper.UserResultMap"></association>
  </resultMap>
  
  <!-- 强化版map -->
  <resultMap id="EXResultMap" type="com.shop.pojo.document.OrderGoods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="amount_money" jdbcType="DECIMAL" property="amount_money" />
    <result column="actual_money" jdbcType="DECIMAL" property="actual_money" />
    <association column="goods_document_code" property="goodsDocument" select="com.shop.mapper.document.GoodsDocumentMapper.selectByPrimaryKey"></association>
    <association column="card_id" property="card" select="com.shop.mapper.CardMapper.selectByPrimaryKey"></association>
    <association column="client_id" property="client"  select="com.shop.mapper.BaseMapper.selectUserById"></association>
  </resultMap>
  
  <resultMap type="com.shop.pojo.document.ClientSummary" extends="com.shop.mapper.BaseMapper.ObjectSummaryMap" id="ClientSummaryMap">
  	<association column="id" property="user" select="com.shop.mapper.BaseMapper.selectUserById"></association>
  </resultMap>
  
  
  <sql id="Base_Column_List">
    id, goods_document_code, client_id, amount_money, actual_money, card_id
  </sql>
  <sql id="Select_info_eazy">
  	select og.id, og.goods_document_code, og.client_id, og.amount_money, og.actual_money, og.card_id
			
    from tb_order_goods as og 
  </sql>
  <sql id="Select_info">
  	select og.id, og.goods_document_code, og.client_id, og.amount_money, og.actual_money, og.card_id, 
			 gd.`code`,gd.manage_lib_id ,gd.manage_man_id ,gd.create_time ,gd.create_man ,gd.document_type ,gd.isEffective   ,gd.`comment` as goods_document_comment,ui.name,ui.sex ,ui.address ,ui.e_mail ,ui.phone,card.name as card_name
    from tb_order_goods as og LEFT JOIN tb_goods_document as gd ON og.goods_document_code = gd.`code`
				 LEFT JOIN tb_user_info as ui ON og.client_id = ui.id
				 LEFT JOIN tb_card as card ON og.card_id = card.id
  </sql>
  <sql id="from_GoodsDetailAll">
	  from (select gi.shop_id  ,gi.specification_id,gi.unit ,avg(gi.price) as price,sum(gi.count) as count
				from tb_goods_info as gi WHERE gi.goods_document_code like 'XT%' GROUP BY specification_id,unit) as xt right join
		 (select gi.shop_id ,gi.specification_id,gi.unit  ,avg(gi.price) as price,sum(gi.count) as count
			  from tb_goods_info as gi WHERE gi.goods_document_code like 'XS%' GROUP BY specification_id,unit) as xs 
	  on xs.specification_id = xt.specification_id and xt.unit = xs.unit 
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <include refid="Select_info" />
    	where og.id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPage" resultMap="EXResultMap">
  	<include refid="Select_info_eazy" />
  	
  	<include refid="com.shop.mapper.BaseMapper.limit" />
  </select>	
  <select id="getOrderCount" resultType="int">
  select count(1)
			
    from tb_order_goods
  </select>
  
  <select id="getGoodsDetailAll"  resultMap="com.shop.mapper.GoodsInfoMapper.GoodsSummaryMap">
    
	select 
	xs.shop_id  ,xs.specification_id,xs.unit,xs.price*xs.count as handleMoney,
	xt.price*xt.count as returnMoney,xs.count as handleCount,xt.count as returnCount  
	<include refid="from_GoodsDetailAll" />
  </select>
  
  <select id="getGoodsDetailCount" resultType="int">
  	select count(1)
  	<include refid="from_GoodsDetailAll" />
  </select>
  
  
  
  <select id="getGoodsDetailByPage" parameterType="map"  resultMap="com.shop.mapper.GoodsInfoMapper.GoodsSummaryMap">
    
	select xs.shop_id  ,xs.specification_id,xs.unit,xs.price*xs.count as handleMoney,
	xt.price*xt.count as returnMoney,xs.count as handleCount,xt.count as returnCount   
	<include refid="from_GoodsDetailAll" /><!-- 查询货品明细 -->
  	
  	
  	<trim prefix="where">
  		 <if test="_parameter.containsKey('findId') and findId != null">
			xs.shop_id = #{findId}
		</if>
		
		
  	</trim>
  	
  	<include refid="com.shop.mapper.BaseMapper.limit" />
  	
  </select>
  
  <select id="selectOrderGoodsAll" resultMap="EXResultMap">
  	<include refid="Select_info_eazy" />
  	<include refid="com.shop.mapper.BaseMapper.limit" />
  </select>
  
  <select id="getUserSellSumCount" resultType="int">
  		select count(1)
    from tb_user_info as ui right join 
		(select  og.client_id  from tb_order_goods as og GROUP BY client_id	) as xs
	  on ui.id = xs.client_id
		right join 
		(select  og.client_id  from tb_sell_return as og GROUP BY client_id	) as xt
	  on ui.id = xt.client_id		
					
  </select>
  <select id="getUserSellSumByPage" resultMap="ClientSummaryMap">
	select ui.id,xs.count as handleCount,xs.money as handleMoney,xt.count as returnCount,xt.money as returnMoney
    from tb_user_info as ui right join 
		(select  og.client_id,sum(gi.price*gi.count) as money,sum(gi.count) as count  from tb_goods_info as gi inner JOIN tb_order_goods as og 
		on gi.goods_document_code = og.goods_document_code group by og.client_id) as xs
	  on ui.id = xs.client_id
		left join 
		(select  og.client_id,sum(gi.price*gi.count) as money,sum(gi.count) as count from tb_goods_info as gi inner JOIN tb_sell_return as og 
		on gi.goods_document_code = og.goods_document_code ) as xt
	  on ui.id = xt.client_id			
					
  	<include refid="com.shop.mapper.BaseMapper.limit" />		
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_order_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shop.pojo.document.OrderGoods">
    insert into tb_order_goods (id, goods_document_code, client_id, 
      amount_money, actual_money, card_id)
    values (#{id,jdbcType=INTEGER}, #{goodsDocument.code,jdbcType=VARCHAR}, #{client.id,jdbcType=INTEGER}, 
      #{amount_money,jdbcType=DECIMAL}, #{actual_money,jdbcType=DECIMAL}, #{card_id,jdbcType=INTEGER}
  </insert>
  <insert id="insertSelective" parameterType="com.shop.pojo.document.OrderGoods">
    insert into tb_order_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsDocument.code != null">
        goods_document_code,
      </if>
      <if test="client.id != null">
        client_id,
      </if>
      <if test="amount_money != null">
        amount_money,
      </if>
      <if test="actual_money != null">
        actual_money,
      </if>
      <if test="card_id != null">
        card_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsDocument.code != null">
        #{goodsDocument.code,jdbcType=VARCHAR},
      </if>
      <if test="client.id != null">
        #{client.id,jdbcType=INTEGER},
      </if>
      <if test="amount_money != null">
        #{amount_money,jdbcType=DECIMAL},
      </if>
      <if test="actual_money != null">
        #{actual_money,jdbcType=DECIMAL},
      </if>
      <if test="card_id != null">
        #{card_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.pojo.document.OrderGoods">
    update tb_order_goods
    <set>
      <if test="goods_document_code != null">
        goods_document_code = #{goods_document_code,jdbcType=VARCHAR},
      </if>
      <if test="client_id != null">
        client_id = #{client_id,jdbcType=INTEGER},
      </if>
      <if test="amount_money != null">
        amount_money = #{amount_money,jdbcType=DECIMAL},
      </if>
      <if test="actual_money != null">
        actual_money = #{actual_money,jdbcType=DECIMAL},
      </if>
      <if test="card_id != null">
        card_id = #{card_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.pojo.document.OrderGoods">
    update tb_order_goods
    set goods_document_code = #{goods_document_code,jdbcType=VARCHAR},
      client_id = #{client_id,jdbcType=INTEGER},
      amount_money = #{amount_money,jdbcType=DECIMAL},
      actual_money = #{actual_money,jdbcType=DECIMAL},
      card_id = #{card_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>